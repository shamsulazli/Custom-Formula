//EJA NOMBOR BI
function wordNumber(number) {
if (number === 0) {
return 'Zero';
}
const units = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine','Ten'];
const teens = ['', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];
const tens = ['', 'Ten', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];
function convertLessThanOneThousand(num) {
if (num === 0) {
return '';
} else if (num <= 10) {
return units[num];
} else if (num < 20) {
return teens[num - 10];
} else if (num < 100) {
return tens[Math.floor(num / 10)] + ' ' + convertLessThanOneThousand(num % 10);
} else {
return units[Math.floor(num / 100)] + ' Hundred ' + convertLessThanOneThousand(num % 100);
}
}
function convertChunk(num, chunkIndex) {
if (num === 0) {
return '';
} else {
return convertLessThanOneThousand(num) + (chunkIndex > 0 ? ' ' + getChunkLabel(chunkIndex) + ' ' : '');
}
}
function getChunkLabel(chunkIndex) {
const chunkLabels = ['', 'Thousand', 'Million', 'Billion', 'Trillion'];
return chunkLabels[chunkIndex];
}
const chunks = [];
while (number > 0) {
chunks.push(number % 1000);
number = Math.floor(number / 1000);
}
const words = chunks.map((chunk, index) => convertChunk(chunk, index)).reverse();
return words.join(' ').trim();
}
